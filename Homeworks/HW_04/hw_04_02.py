# ✔ Напишите функцию принимающую на вход только ключевые
# параметры и возвращающую словарь, где ключ — значение
# переданного аргумента, а значение — имя аргумента. Если
# ключ не хешируем, используйте его строковое представление.

def make_dict(**kwargs):
    '''
    Принимает на вход только ключевые параметры и возвращающую словарь, где ключ — значение переданного аргумента, а значение — имя аргумента. Если
    ключ не хешируем, используется его строковое представление.
    :param kwargs:dict
    :return:dict
    '''
    my_dict = {}
    for item in kwargs:
        # Тут можно обойтись без обратки исключений.
        # Используйте функцию dir чтобы вернуть список атрибутов и методов.
        # После проверьте имеется ли там элемент __hash__.
        # Скорее всего этот элемент будет в любом случае.
        # Функция hash под капотом вызывает именно этот метод, однако он будет прописан только у хэшируемых объектов,
        # а у нехэшируемых этого метода нет, но есть одноименный атрибут, который имеет значение None.
        # Попробуйте использовать эту информацию.
        # TODO Спросить на семинаре 15.06.2023
        print(f'{kwargs[item] = }\t\t\t{item.__hash__() = }')
        try:
            my_dict[kwargs[item]] = item
        except:
            my_dict[str(kwargs[item])] = item
    print(kwargs)
    return my_dict


print(make_dict(param_1=1, param_2='string', param_3=[1, 2, 3], param_4={1, 2, 3}))
