# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
# üìå –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
# ‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª,
# ‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
# üìå –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.

import logging
import os
import argparse
from collections import namedtuple
# from sys import platform


def parser():
    parser = argparse.ArgumentParser(description='Our parser')
    parser.add_argument('folder', metavar='F', type=str, nargs='*', help='Please, enter folder path.')
    args = parser.parse_args()
    print(args.folder[0])
    create_namedtuple(args.folder[0])


def log(folder_object):
    FORMAT = '{levelname:<8} - {asctime}. {msg}'
    logging.basicConfig(filename='folder_object.log', format=FORMAT, style='{', encoding='utf-8', level=logging.INFO)
    logger = logging.getLogger(__name__)
    logger.info(f'Append\t{folder_object}')


def create_namedtuple(folder):
    # —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π –∫–ª–∞—Å—Å–∞
    fields = ['name', 'ext', 'flag_folder', 'parent_folder']
    # —Å–æ–∑–¥–∞—ë—Ç—Å—è –∫–ª–∞—Å—Å FolderObject
    FolderObject = namedtuple('FolderObject', fields)
    # —Å–ø–∏—Å–æ–∫ FolderObject (—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ folder)
    content_list = []
    if os.path.exists(folder):
        folder_content = os.walk(folder)
        for path, folders, files in folder_content:
            # print(f'{path = } ___ {folders = } ___ {files = }')
            parent_folder = path.rsplit('\\', 1)[-1]
            for item in folders:
                folder_object = FolderObject(item, None, True, parent_folder)
                content_list.append(folder_object)
                log(folder_object)
            for item in files:
                # –µ—Å–ª–∏ —Ñ–∞–π–ª –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
                try:
                    file_name, file_ext = item.rsplit('.', 1)
                except ValueError:
                    file_name = item
                    file_ext = 'absent'
                folder_object = FolderObject(file_name, file_ext, False, parent_folder)
                content_list.append(folder_object)
                log(folder_object)
        print(*content_list)
    else:
        print(f'–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {folder} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')


if __name__ == '__main__':
    # folder = 'C:\\Users\\Nikita\\PycharmProjects\\40_diving_into_python\\Homeworks\\HW_14'
    # folder = 'C:\\Users\\Nikita\\PycharmProjects\\40_diving_into_python\\Homeworks'
    # folder = 'C:/Users/Nikita/PycharmProjects/40_diving_into_python/Homeworks/HW_14'
    # create_namedtuple(folder)

    # if platform == "linux" or platform == "linux2":
    #     print('linux')
    # elif platform == "darwin":
    #     print('OS X')
    # elif platform == "win32":
    #     print('Windows')
    # –ï—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–¥–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –≤ unix/windows —Ñ–æ—Ä–º–∞—Ç–µ –≤ –ª—é–±—É—é –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫ (os –∏–ª–∏ pathlib) –∏ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç –≤ —Ç–æ–π –∂–µ —Å–∏—Å—Ç–µ–º–µ,
    # —Ç–æ –æ–Ω —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í—Ä—è–¥ –ª–∏ –∫—Ç–æ-—Ç–æ, —Ä–∞–±–æ—Ç–∞—è –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ linux, –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø—É—Ç—å –≤ —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é –≤ windows —Ñ–æ—Ä–º–∞—Ç–µ.
    # –ù–æ –≤ –±—É–¥—É—â–µ–º –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è.

    parser()
'''
python hw_15_01.py C:/Users/Nikita/PycharmProjects/40_diving_into_python/Homeworks/HW_14
'''
