# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ json —Ñ–∞–π–ª –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
# –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è, –∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è.
# üìå –ö–∞–∂–¥—ã–π –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª—é—á json —Å–ª–æ–≤–∞—Ä—è.
# üìå –î–ª—è –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ –∫–ª—é—á–µ–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
# üìå –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏–º–µ–Ω–µ–º –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.

import json
import os
from functools import wraps



def deco(func):
    @wraps(func)
    def wrapper(num, *args, **kwargs):
        filename = f'{func.__name__}.json'
        if os.path.exists(filename):
            with open(filename, 'r', encoding='utf-8') as fj:
                list_file = json.load(fj)
        else:
            list_file = []
        result = func(num, *args, **kwargs)
        list_file.append({
            'args': (num, args, kwargs),
            'result': result
        })
        with open(filename, 'w', encoding='utf-8') as fj:
            json.dump(list_file, fj, indent=1)

    return wrapper


@deco
def get_any(num, *args, **kwargs):
    return num


if __name__ == '__main__':
    my_dict = {3: 3, 4: 4}
    get_any(2, 'aa', 'bb', 'cc', my_dict)
