# –ó–∞–¥–∞—á–∞ –∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞ ‚Ññ11
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
# –ù–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫: –º–µ–Ω—å—à–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ = const
# –í—ã—á–∏—Ç–∞–Ω–∏–µ –∏–∑ –±–æ–ª—å—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ (–º–æ–¥—É–ª—å)
class Rectangle:
    '''
    –ö–ª–∞—Å—Å Rectangle. –ü–µ—Ä–∏–º–µ—Ç—Ä, –ø–ª–æ—â–∞–¥—å, —Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.
    '''

    def __init__(self, *args):
        if len(args) == 1:
            self.length = args[0]
            self.width = self.length
        else:
            self.length, self.width = args

    def get_perimeter(self):
        return self.length * 2 + self.width * 2

    def get_square(self):
        return self.length * self.width

    def get_perimeters(self, other):
        return self.length * 2 + self.width * 2, other.length * 2 + other.width * 2

    def __add__(self, other):
        sum_perimeters = sum(self.get_perimeters(other))
        print(sum_perimeters)
        min_size = min(self.width, self.length, other.width, other.length)
        two_size = (sum_perimeters - min_size * 2) / 2
        return Rectangle(min_size, two_size)

    def __sub__(self, other):
        p_1, p_2 = self.get_perimeters(other)
        sub_perimeters = abs(p_1 - p_2)
        size = sub_perimeters / 4
        return Rectangle(size)

    def __eq__(self, other):
        return self.get_perimeter() == other.get_perimeter() and self.get_square() == other.get_square()

    def __str__(self):
        return '–ö–ª–∞—Å—Å Rectangle. –ü–µ—Ä–∏–º–µ—Ç—Ä, –ø–ª–æ—â–∞–¥—å, —Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.'

    def __repr__(self):
        return f'Rectangle({self.length}, {self.width})'


if __name__ == '__main__':
    rec_1 = Rectangle(5)
    rec_2 = Rectangle(5, 6)
    sum_rec = rec_1 + rec_2
    print(sum_rec.length, sum_rec.width)
    sub_rec = rec_1 - rec_2
    print(sub_rec.length, sub_rec.width)
    print(rec_1)
    print(f'{rec_1 = }')

    rec = Rectangle(5)
    # rec_3 = Rectangle('q')
    # sum_rec = rec_3 + rec_3
    print(Rectangle(5) == Rectangle(5))
