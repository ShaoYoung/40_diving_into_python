# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.

class Factorial:
    def __init__(self, *args):
        if len(args) == 2:
            self.start, self.stop = args
            self.step = 1
        elif len(args) == 1:
            self.stop = args[0]
            self.start = 1
            self.step = 1
        else:
            self.start, self.stop, self.step, *_ = args
        # print(f'{self.start = }\t{self.stop = }\t{self.step = }')

    def __iter__(self):
        return self

    def __next__(self):
        while self.start <= self.stop:
            fac = 1
            for i in range(self.start, self.stop + 1, self.step):
                fac *= i
            self.start += self.step
            return fac
        raise StopIteration


if __name__ == '__main__':
    factorial = Factorial(1, 10, 1)
    for i in factorial:
        print(i)
