# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ò–∑–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –ó–∞–º–µ–Ω—è–µ–º –ø–∞—Ä—É –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –Ω–∞ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞.
class Range:
    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏
    def __set_name__(self, owner, name):
        self.param_name = '_' + name

    def __get__(self, instance, owner):
        return getattr(instance, self.param_name)

    def __set__(self, instance, value):
        if self.validate(value):
            setattr(instance, self.param_name, value)

    def validate(self, value):
        if value < 0:
            raise ValueError("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")
        return True


class Rectangle:
    length = Range()
    width = Range()
    '''
    –ö–ª–∞—Å—Å Rectangle. –ü–µ—Ä–∏–º–µ—Ç—Ä, –ø–ª–æ—â–∞–¥—å, —Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.
    '''
    # __slots__ = "_length", "_width"

    def __init__(self, *args):
        if len(args) == 1:
            self.length = args[0]
            self.width = self.length
        else:
            self.length, self.width = args

    def get_perimeter(self):
        return self.length * 2 + self.width * 2

    def get_square(self):
        return self.length * self.width

    def get_perimeters(self, other):
        return self.length * 2 + self.width * 2, other.length * 2 + other.width * 2

    def __add__(self, other):
        sum_perimeters = sum(self.get_perimeters(other))
        print(sum_perimeters)
        min_size = min(self.width, self.length, other.width, other.length)
        two_size = (sum_perimeters - min_size * 2) / 2
        return Rectangle(min_size, two_size)

    def __sub__(self, other):
        p_1, p_2 = self.get_perimeters(other)
        sub_perimeters = abs(p_1 - p_2)
        size = sub_perimeters / 4
        return Rectangle(size)

    def __str__(self):
        return '–ö–ª–∞—Å—Å Rectangle. –ü–µ—Ä–∏–º–µ—Ç—Ä, –ø–ª–æ—â–∞–¥—å, —Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.'

    def __repr__(self):
        return f'Rectangle({self.length}, {self.width})'


if __name__ == '__main__':
    rec_1 = Rectangle(5)
    rec_1.length = 6
    print(f'{rec_1.length = }')
    rec_1.width = 7
    print(f'{rec_1.width = }')
